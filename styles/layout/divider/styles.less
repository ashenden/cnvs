/* -----------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
divider/styles.less
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------- */



& when (@divider-enabled) {

  /* -----------------------------------------------------------------------------
  Divider
  ----------------------------------------------------------------------------- */

  hr,
  .divider {

    display: block;
    .shape-layout-variant(divider, null);
    .shape-layout-variant(divider, flush, null);
    .shape-layout-variant(divider, shorter, null);
    .shape-layout-variant(divider, short, null);
    .shape-layout-variant(divider, tall, null);
    .shape-layout-variant(divider, taller, null);
    .shape-style-variant(divider);

    & when not (@divider-height = null) {

      height: @divider-height;

    }

    & when not (@divider-border-radius = null) {

      border-radius: @divider-border-radius;

    }

    /* -----------------------------------------------------------------------------
    Divider Inverse (.divider-inverse)
    ----------------------------------------------------------------------------- */

    &.divider-inverse {

      .shape-style-variant(divider-inverse);

    }

  }

}



& when (@layout-scale-screen-small-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Mini (@layout-screen-small-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-small-min-width) {

    & when (@divider-enabled) and (@divider-scale-screen-small-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .shape-layout-variant(divider, scale-screen-small);
        .shape-layout-variant(divider, short, scale-screen-small);
        .shape-layout-variant(divider, tall, scale-screen-small);

        & when not (@divider-height-scale-screen-small = null) {

          height: @divider-height * @divider-height-scale-screen-small;

        }

        & when not (@divider-border-radius = null) and not (@divider-border-radius-scale-screen-small = null) {

          border-radius: @divider-border-radius * @divider-border-radius-scale-screen-small;

        }

      }

    }

  }

}



& when (@layout-scale-screen-medium-enabled) and (@divider-scale-screen-medium-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Small (@layout-screen-medium-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-medium-min-width) {

    & when (@divider-enabled) and (@divider-scale-screen-medium-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .shape-layout-variant(divider, scale-screen-medium);
        .shape-layout-variant(divider, short, scale-screen-medium);
        .shape-layout-variant(divider, tall, scale-screen-medium);

        & when not (@divider-height-scale-screen-medium = null) {

          height: @divider-height * @divider-height-scale-screen-medium;

        }

        & when not (@divider-border-radius = null) and not (@divider-border-radius-scale-screen-medium = null) {

          border-radius: @divider-border-radius * @divider-border-radius-scale-screen-medium;

        }

      }



    }

  }

}



& when (@layout-scale-screen-large-enabled) and (@divider-scale-screen-large-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Medium (@layout-screen-large-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-large-min-width) {

    & when (@divider-enabled) and (@divider-scale-screen-large-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .shape-layout-variant(divider, scale-screen-large);
        .shape-layout-variant(divider, short, scale-screen-large);
        .shape-layout-variant(divider, tall, scale-screen-large);

        & when not (@divider-height-scale-screen-large = null) {

          height: @divider-height * @divider-height-scale-screen-large;

        }

        & when not (@divider-border-radius = null) and not (@divider-border-radius-scale-screen-large = null) {

          border-radius: @divider-border-radius * @divider-border-radius-scale-screen-large;

        }

      }



    }

  }

}



& when (@layout-scale-screen-jumbo-enabled) and (@divider-scale-screen-jumbo-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: large (@layout-screen-jumbo-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-jumbo-min-width) {

    & when (@divider-enabled) and (@divider-scale-screen-jumbo-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .shape-layout-variant(divider, scale-screen-jumbo);
        .shape-layout-variant(divider, short, scale-screen-jumbo);
        .shape-layout-variant(divider, tall, scale-screen-jumbo);

        & when not (@divider-height-scale-screen-jumbo = null) {

          height: @divider-height * @divider-height-scale-screen-jumbo;

        }

        & when not (@divider-border-radius = null) and not (@divider-border-radius-scale-screen-jumbo = null) {

          border-radius: @divider-border-radius * @divider-border-radius-scale-screen-jumbo;

        }

      }



    }

  }

}
