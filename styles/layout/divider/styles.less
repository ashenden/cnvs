/* -----------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
divider/styles.less
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------- */



& when (@divider-enabled) {

  /* -----------------------------------------------------------------------------
  Divider
  ----------------------------------------------------------------------------- */

  hr,
  .divider {

    display: block;
    .shape-style-variant(divider);
    .element-spacing(divider, null, null);
    .prop-variant(divider, height, null, null);
    .prop-variant(divider, border-radius, null, null);

    /* -----------------------------------------------------------------------------
    Divider Inverse (.divider-inverse)
    ----------------------------------------------------------------------------- */

    &.divider-inverse {

      .shape-style-variant(divider-inverse);

    }

    /* -----------------------------------------------------------------------------
    Divider Layout Variants
    ----------------------------------------------------------------------------- */

    &-shorter {

      .element-spacing(divider, shorter, null);

    }

    &-short {

      .element-spacing(divider, short, null);

    }

    &-tall {

      .element-spacing(divider, tall, null);

    }

    &-taller {

      .element-spacing(divider, taller, null);

    }

  }

  hr,
  [class^="divider"],
  [class*=" divider"] {

    &.flush {

      padding-top: 0px;
      padding-bottom: 0px;
      padding-left: 0px;
      padding-right: 0px;

    }

    &.flush-vertical {

      padding-top: 0px;
      padding-bottom: 0px;

    }

    &.flush-horizontal {

      padding-left: 0px;
      padding-right: 0px;

    }

    &.flush-top {

      padding-top: 0px;

    }

    &.flush-bottom {

      padding-bottom: 0px;

    }

    &.flush-left {

      padding-left: 0px;

    }

    &.flush-right {

      padding-right: 0px;

    }

  }

}



& when (@layout-screen-small-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Small (@layout-screen-small-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-small-min-width) {

    & when (@divider-enabled) and (@divider-screen-small-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .element-spacing(divider, null, screen-small);
        .prop-variant(divider, height, null, screen-small);
        .prop-variant(divider, border-radius, null, screen-small);

        /* -----------------------------------------------------------------------------
        Divider Layout Variants
        ----------------------------------------------------------------------------- */

        &-shorter {

          .element-spacing(divider, shorter, screen-small);

        }

        &-short {

          .element-spacing(divider, short, screen-small);

        }

        &-tall {

          .element-spacing(divider, tall, screen-small);

        }

        &-taller {

          .element-spacing(divider, taller, screen-small);

        }

      }

    }

  }

}



& when (@layout-screen-medium-enabled) and (@divider-screen-medium-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Medium (@layout-screen-medium-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-medium-min-width) {

    & when (@divider-enabled) and (@divider-screen-medium-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .element-spacing(divider, null, screen-medium);
        .prop-variant(divider, height, null, screen-medium);
        .prop-variant(divider, border-radius, null, screen-medium);

        /* -----------------------------------------------------------------------------
        Divider Layout Variants
        ----------------------------------------------------------------------------- */

        &-shorter {

          .element-spacing(divider, shorter, screen-medium);

        }

        &-short {

          .element-spacing(divider, short, screen-medium);

        }

        &-tall {

          .element-spacing(divider, tall, screen-medium);

        }

        &-taller {

          .element-spacing(divider, taller, screen-medium);

        }

      }



    }

  }

}



& when (@layout-screen-large-enabled) and (@divider-screen-large-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Large (@layout-screen-large-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-large-min-width) {

    & when (@divider-enabled) and (@divider-screen-large-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .element-spacing(divider, null, screen-large);
        .prop-variant(divider, height, null, screen-large);
        .prop-variant(divider, border-radius, null, screen-large);

        /* -----------------------------------------------------------------------------
        Divider Layout Variants
        ----------------------------------------------------------------------------- */

        &-shorter {

          .element-spacing(divider, shorter, screen-large);

        }

        &-short {

          .element-spacing(divider, short, screen-large);

        }

        &-tall {

          .element-spacing(divider, tall, screen-large);

        }

        &-taller {

          .element-spacing(divider, taller, screen-large);

        }

      }

    }

  }

}



& when (@layout-screen-jumbo-enabled) and (@divider-screen-jumbo-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Jumbo (@layout-screen-jumbo-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-jumbo-min-width) {

    & when (@divider-enabled) and (@divider-screen-jumbo-enabled) {

      /* -----------------------------------------------------------------------------
      Divider
      ----------------------------------------------------------------------------- */

      hr,
      .divider {

        .element-spacing(divider, null, screen-jumbo);
        .prop-variant(divider, height, null, screen-jumbo);
        .prop-variant(divider, border-radius, null, screen-jumbo);

        /* -----------------------------------------------------------------------------
        Divider Layout Variants
        ----------------------------------------------------------------------------- */

        &-shorter {

          .element-spacing(divider, shorter, screen-jumbo);

        }

        &-short {

          .element-spacing(divider, short, screen-jumbo);

        }

        &-tall {

          .element-spacing(divider, tall, screen-jumbo);

        }

        &-taller {

          .element-spacing(divider, taller, screen-jumbo);

        }

      }

    }

  }

}
