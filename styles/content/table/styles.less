& when (@table-enabled) {

  /* Table */

  .table {

    width: 100%;
    max-width: 100%;
    .element-text-style(table);
    .element-text-size(table, null);
    .element-spacing(table, null, null);
    .property-variant(table, border-collapse, null);

    /* Layout Variants */

    &.table-short {

      .element-spacing(table, short, null);

    }

    &.table-tall {

      .element-spacing(table, tall, null);

    }

    & when not (@table-border-radius = null) {

      /* Table Border Radius */

      border-radius: @table-border-radius;

      tbody {

        tr {

          &:first-child {

            td,
            th {

              &:first-child {

                .border-top-left-radius(@table-border-radius);

              }

              &:last-child {

                .border-top-right-radius(@table-border-radius);

              }

            }

          }

          &:last-child {

            td,
            th {

              &:first-child {

                .border-bottom-left-radius(@table-border-radius);

              }

              &:last-child {

                .border-bottom-right-radius(@table-border-radius);

              }

            }

          }

        }

      }

      > thead {

        tr {

          &:first-child {

            th {

              &:first-child {

                .border-top-left-radius(@table-border-radius);

              }

              &:last-child {

                .border-top-right-radius(@table-border-radius);

              }

            }

          }

        }

        + tbody {

          tr {

            &:first-child {

              th,
              td {

                border-radius: 0px !important;

              }

            }

          }

        }

      }

    }


    th,
    td {

      text-align: left;
      .element-text-style(table-cell);
      .element-text-size(table-cell, null);
      .element-shape-style(table-cell);
      .element-spacing(table-cell, null, null);
      .property-variant(table, border-collapse, null);

      &:before {

        content: '';
        display: block;
        float: left;
        .property-variant(table-cell, height, line-height, null, null);

      }

      &.selectable {

        &:hover {

          cursor: pointer;
          .element-text-style(table-cell-hover);
          .element-shape-style(table-cell-hover);

        }

      }

      &.disabled {

        .element-text-style(table-cell-disabled);
        .element-shape-style(table-cell-disabled);

      }

      // Cell active

      &.active,
      &.highlight {

        .element-text-style(table-cell-active);
        .element-shape-style(table-cell-active);

        &.selectable {

          &:hover {

            .element-text-style(table-cell-active-hover);
            .element-shape-style(table-cell-active-hover);

          }

        }

        &.disabled {

          .element-text-style(table-cell-active-disabled);
          .element-shape-style(table-cell-active-disabled);

        }

      }

    }

    // Table Head

    thead {

      th {

        .element-text-style(table-header);
        .element-text-size(table-header, null);
        .element-shape-style(table-header);
        .element-spacing(table-header, null, null);

        &:before {

          .property-variant(table-header, height, line-height, null, null);

        }

        &.selectable {

          &:hover {

            .element-text-style(table-header-hover);
            .element-shape-style(table-header-hover);

          }

        }

        &.disabled {

          .element-text-style(table-header-disabled);
          .element-shape-style(table-header-disabled);

        }

        // Cell Active

        &.active,
        &.highlight {

          .element-text-style(table-header-active);
          .element-shape-style(table-header-active);

          &.selectable {

            &:hover {

              .element-text-style(table-header-active-hover);
              .element-shape-style(table-header-active-hover);

            }

          }

          &.disabled {

            .element-text-style(table-header-active-disabled);
            .element-shape-style(table-header-active-disabled);

          }

        }

      }

    }

    // Table Hover

    &.table-hover {

      tr {

        &:hover {

          td {

            .element-text-style(table-cell-hover);
            .element-shape-style(table-cell-hover);

            // Cell Active

            &.active,
            &.highlight {

              .element-text-style(table-cell-active-hover);
              .element-shape-style(table-cell-active-hover);

            }

          }

        }

      }

    }

  }

  & when (@table-inverse-enabled) {

    /* Inverse Table (.table-inverse) */

    .table.table-inverse {

      .element-text-style(table-inverse);

      th,
      td {

        .element-text-style(table-cell-inverse);
        .element-shape-style(table-cell-inverse);

        &.selectable {

          &:hover {

            .element-text-style(table-cell-inverse-hover);
            .element-shape-style(table-cell-inverse-hover);

          }

        }

        &.disabled {

          .element-text-style(table-cell-inverse-disabled);
          .element-shape-style(table-cell-inverse-disabled);

        }

        // Cell Active

        &.active,
        &.highlight {

          .element-text-style(table-cell-inverse-active);
          .element-shape-style(table-cell-inverse-active);

          &.selectable {

            &:hover {

              .element-text-style(table-cell-inverse-active-hover);
              .element-shape-style(table-cell-inverse-active-hover);

            }

          }

          &.disabled {

            .element-text-style(table-cell-inverse-active-disabled);
            .element-shape-style(table-cell-inverse-active-disabled);

          }

        }

      }

      // Table Head

      thead {

        th {

          .element-text-style(table-header-inverse);
          .element-shape-style(table-header-inverse);

          &.selectable {

            &:hover {

              .element-text-style(table-header-inverse-hover);
              .element-shape-style(table-header-inverse-hover);

            }

          }

          &.disabled {

            .element-text-style(table-header-inverse-disabled);
            .element-shape-style(table-header-inverse-disabled);

          }

          // Cell Active

          &.active,
          &.highlight {

            .element-text-style(table-header-inverse-active);
            .element-shape-style(table-header-inverse-active);

            &.selectable {

              &:hover {

                .element-text-style(table-header-inverse-active-hover);
                .element-shape-style(table-header-inverse-active-hover);

              }

            }

            &.disabled {

              .element-text-style(table-header-inverse-active-disabled);
              .element-shape-style(table-header-inverse-active-disabled);

            }

          }

        }

      }

      // Table Hover

      &.table-hover {

        tr {

          &:hover {

            td {

              .element-text-style(table-cell-inverse-hover);
              .element-shape-style(table-cell-inverse-hover);

              // Cell Active

              &.active,
              &.highlight {

                .element-text-style(table-cell-inverse-active-hover);
                .element-shape-style(table-cell-inverse-active-hover);

              }

            }

          }

        }

      }

    }

  }

  /* Responsive Table */

  .table-responsive {

    display: block;
    width: 100%;
    min-height: .01%;
    overflow-x: auto;

  }

  /* Table Borderless */

  &.table-borderless {

    > thead {

      tr {

        th {

          border-top: 0px;
          border-bottom: 0px;
          border-left: 0px;
          border-right: 0px;

        }

      }

    }

    > tbody,
    > tfoot {

      tr {

        td,
        th {

          border: 0px;

        }

      }

    }

  }

  /* Table Borderless (Outer Borders) */

  &.table-borderless-outer {

    > thead {

      tr {

        &:first-child {

          th {

            border-top: 0px;

          }

        }

        &:last-child {

          th {

            border-bottom: 0px;

          }

        }

        th {

          &:first-child {

            border-left: 0px;

          }

        }

        th {

          &:last-child {

            border-right: 0px;

          }

        }

      }

    }

    > tbody,
    > tfoot {

      tr {

        &:first-child {

          td,
          th {

            border-top: 0px;

          }

        }

        &:last-child {

          td,
          th {

            border-bottom: 0px;

          }

        }

        td,
        th {

          &:first-child {

            border-left: 0px;

          }

          &:last-child {

            border-right: 0px;

          }

        }

      }

    }

  }

  /* Table Borderless (Outer Borders, Rows) */

  &.table-borderless-outer-rows {

    > thead {

      tr {

        &:first-child {

          th {

            border-top: 0px;

          }

        }

        &:last-child {

          th {

            border-bottom: 0px;

          }

        }

      }

    }

    > tbody,
    > tfoot {

      tr {

        &:first-child {

          td,
          th {

            border-top: 0px;

          }

        }

        &:last-child {

          td,
          th {

            border-bottom: 0px;

          }

        }

      }

    }

  }

  /* Table Borderless (Outer Borders, Columns) */

  &.table-borderless-outer-columns {

    > thead {

      tr {

        th {

          &:first-child {

            border-left: 0px;

          }

        }

        th {

          &:last-child {

            border-right: 0px;

          }

        }

      }

    }

    > tbody,
    > tfoot {

      tr {

        td,
        th {

          &:first-child {

            border-left: 0px;

          }

          &:last-child {

            border-right: 0px;

          }

        }

      }

    }

  }

  /* Table Borderless (Inner Borders) */

  &.table-borderless-inner {

    > thead,
    > tbody,
    > tfoot {

      tr {

        &:not(:first-child) {

          td,
          th {

            border-top: 0px;

          }

        }

        &:not(:last-child) {

          td,
          th {

            border-bottom: 0px;

          }

        }

        td,
        th {

          &:not(:first-child) {

            border-left: 0px;

          }

          &:not(:last-child) {

            border-right: 0px;

          }

        }

      }

    }

    > thead + tbody {

      tr {

        &:first-child {

          td,
          th {

            border-top: 0px;

          }

        }

      }

    }

  }

  /* Table Borderless (Inner Borders, Rows) */

  &.table-borderless-inner-rows {

    > thead,
    > tbody,
    > tfoot {

      tr {

        &:not(:first-child) {

          td,
          th {

            border-top: 0px;

          }

        }

        &:not(:last-child) {

          td,
          th {

            border-bottom: 0px;

          }

        }

      }

    }

  }

  > thead + tbody {

    tr {

      &:first-child {

        td,
        th {

          border-top: 0px;

        }

      }

    }

  }

  /* Table Borderless (Inner Borders, Columns) */

  &.table-borderless-inner-columns {

    > thead,
    > tbody,
    > tfoot {

      tr {

        td,
        th {

          &:not(:first-child) {

            border-left: 0px;

          }

          &:not(:last-child) {

            border-right: 0px;

          }

        }

      }

    }

  }

}



& when (@layout-screen-small-enabled) {

  /* Screen Size: Small (@layout-screen-small-min-width) and wider */

  @media (min-width: @layout-screen-small-min-width) {

    & when (@table-enabled) and (@table-screen-small-enabled) {

      /* Table */

      .table {

        .element-text-size(table, screen-small);
        .element-spacing(table, null, screen-small);

        /* Layout Variants */

        &.table-short {

          .element-spacing(table, short, screen-small);

        }

        &.table-tall {

          .element-spacing(table, tall, screen-small);

        }

        th,
        td {

          .element-text-size(table-cell, screen-small);
          .element-spacing(table-cell, null, screen-small);

          &:before {

            .property-variant(table-cell, height, line-height, null, screen-small);

          }

        }

      }

    }

  }

}



& when (@layout-screen-medium-enabled) {

  /* Screen Size: Medium (@layout-screen-medium-min-width) and wider */

  @media (min-width: @layout-screen-medium-min-width) {

    & when (@table-enabled) and (@table-screen-medium-enabled) {

      /* Table */

      .table {

        .element-text-size(table, screen-medium);
        .element-spacing(table, null, screen-medium);

        /* Layout Variants */

        &.table-short {

          .element-spacing(table, short, screen-medium);

        }

        &.table-tall {

          .element-spacing(table, tall, screen-medium);

        }

        th,
        td {

          .element-text-size(table-cell, screen-medium);
          .element-spacing(table-cell, null, screen-medium);

          &:before {

            .property-variant(table-cell, height, line-height, null, screen-medium);

          }

        }

      }

    }

  }

}



& when (@layout-screen-large-enabled) {

  /* Screen Size: Large (@layout-screen-large-min-width) and wider */

  @media (min-width: @layout-screen-large-min-width) {

    & when (@table-enabled) and (@table-screen-large-enabled) {

      /* Table */

      .table {

        .element-text-size(table, screen-large);
        .element-spacing(table, null, screen-large);

        /* Layout Variants */

        &.table-short {

          .element-spacing(table, short, screen-large);

        }

        &.table-tall {

          .element-spacing(table, tall, screen-large);

        }

        th,
        td {

          .element-text-size(table-cell, screen-large);
          .element-spacing(table-cell, null, screen-large);

          &:before {

            .property-variant(table-cell, height, line-height, null, screen-large);

          }

        }

      }

    }

  }

}



& when (@layout-screen-jumbo-enabled) {

  /* Screen Size: Jumbo (@layout-screen-jumbo-min-width) and wider */

  @media (min-width: @layout-screen-jumbo-min-width) {

    & when (@table-enabled) and (@table-screen-jumbo-enabled) {

      /* Table */

      .table {

        .element-text-size(table, screen-jumbo);
        .element-spacing(table, null, screen-jumbo);

        /* Layout Variants */

        &.table-short {

          .element-spacing(table, short, screen-jumbo);

        }

        &.table-tall {

          .element-spacing(table, tall, screen-jumbo);

        }

        th,
        td {

          .element-text-size(table-cell, screen-jumbo);
          .element-spacing(table-cell, null, screen-jumbo);

          &:before {

            .property-variant(table-cell, height, line-height, null, screen-jumbo);

          }

        }

      }

    }

  }

}
