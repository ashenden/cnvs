/* -----------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
button/styles.less
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------- */



& when (@button-enabled) {

  /* -----------------------------------------------------------------------------
  Button
  ----------------------------------------------------------------------------- */

  button,
  .button {

    display: inline-flex;
    justify-content: center;
    align-items: center;
    //transition: all 0.05s ease;
    .text-size-variant(button, null);
    .shape-layout-variant(button, null);
    .shape-layout-variant(button, narrow, null);
    .shape-layout-variant(button, wide, null);
    .text-style-variant(button);
    .shape-style-variant(button);

    & when not (@button-height = null) {

      height: @button-height;

    }

    & when not (@button-border-radius = null) {

      border-radius: @button-border-radius;

    }

    & > * {

      display: inline-flex !important;

    }

    /* -----------------------------------------------------------------------------
    Button Dropdown (.button-dropdown)
    ----------------------------------------------------------------------------- */

    &.button-dropdown,
    &.dropdown-toggle {

      &:after {

        content: '';
        display: inline-block;
        vertical-align: middle;
        .triangle-base();
        .triangle-color("down", @button-text-color);

        & when not (@button-dropdown-caret-width = null) {

          .triangle-size-width("down", @button-dropdown-caret-width);

        }

        & when not (@button-dropdown-caret-height = null) {

          .triangle-size-height("down", @button-dropdown-caret-height);

        }

        & when not (@button-dropdown-caret-margin-left = null) {

          margin-left: @button-dropdown-caret-margin-left;

        }

        & when not (@button-dropdown-caret-margin-top = null) {

          margin-top: @button-dropdown-caret-margin-top;

        }

      }

    }

    &:hover {

      .text-style-variant(button-hover);
      .shape-style-variant(button-hover);
      cursor: pointer;

      // Button Dropdown (.button-dropdown)

      &.button-dropdown,
      &.dropdown-toggle {

        &:after {

          .triangle-color("down", @button-hover-text-color);

        }

      }

    }

    &:active {

      .text-style-variant(button-active);
      .shape-style-variant(button-active);

      // Button Dropdown (.button-dropdown)

      &.button-dropdown,
      &.dropdown-toggle {

        &:after {

          .triangle-color("down", @button-active-text-color);

        }

      }

    }

    &.selected,
    &.active {

      .text-style-variant(button-selected);
      .shape-style-variant(button-selected);

      // Button Dropdown (.button-dropdown)

      &.button-dropdown,
      &.dropdown-toggle {

        &:after {

          .triangle-color("down", @button-selected-text-color);

        }

      }

    }

    &:disabled,
    &.disabled {

      cursor: default;

      .text-style-variant(button-disabled);
      .shape-style-variant(button-disabled);

      & when not (@button-disabled-opacity = null) {

        opacity: @button-disabled-opacity;

      }

      // Button Dropdown (.button-dropdown)

      &.button-dropdown,
      &.dropdown-toggle {

        &:after {

          .triangle-color("down", @button-disabled-text-color);

        }

      }

    }

    /* -----------------------------------------------------------------------------
    Button Inverse (.button-inverse)
    ----------------------------------------------------------------------------- */

    &.button-inverse {

      .text-style-variant(button-inverse);
      .shape-style-variant(button-inverse);

      // Button Dropdown (.button-dropdown)

      &.button-dropdown,
      &.dropdown-toggle {

        &:after {

          .triangle-color("down", @button-inverse-text-color);

        }

      }

      &:hover {

        .text-style-variant(button-inverse-hover);
        .shape-style-variant(button-inverse-hover);

        // Button Dropdown (.button-dropdown)

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            .triangle-color("down", @button-inverse-hover-text-color);

          }

        }

      }

      &:active {

        .text-style-variant(button-inverse-active);
        .shape-style-variant(button-inverse-active);

        // Button Dropdown (.button-dropdown)

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            .triangle-color("down", @button-inverse-active-text-color);

          }

        }

      }

      &.selected,
      &.active {

        .text-style-variant(button-inverse-selected);
        .shape-style-variant(button-inverse-selected);

        // Button Dropdown (.button-dropdown)

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            .triangle-color("down", @button-inverse-selected-text-color);

          }

        }

      }

      &:disabled,
      &.disabled {

        .text-style-variant(button-inverse-disabled);
        .shape-style-variant(button-inverse-disabled);

        & when not (@button-inverse-disabled-opacity = null) {

          opacity: @button-inverse-disabled-opacity;

        }

        // Button Dropdown (.button-dropdown)

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            .triangle-color("down", @button-inverse-disabled-text-color);

          }

        }

      }

    }

    /* -----------------------------------------------------------------------------
    Block Button (.button-block)
    ----------------------------------------------------------------------------- */

    &.button-block {

      display: flex;
      width: 100%;
      margin-left: 0px;
      margin-right: 0px;

    }

    /* -----------------------------------------------------------------------------
    Rounded Button (.button-rounded)
    ----------------------------------------------------------------------------- */

    &.button-rounded {

      border-radius: 1000px;

      & when not (@button-rounded-padding-horizontal-scale = null) {

        & when not (@button-padding-left = null) {

          padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale;

          & when not (@button-narrow-padding-left-scale = null) {

            &.button-narrow {

              padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale;

            }

          }

          & when not (@button-wide-padding-left-scale = null) {

            &.button-wide {

              padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale;

            }

          }

        }

        & when not (@button-padding-right = null) {

          padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale;

          & when not (@button-narrow-padding-right-scale = null) {

            &.button-narrow {

              padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale;

            }

          }

          & when not (@button-wide-padding-right-scale = null) {

            &.button-wide {

              padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale;

            }

          }

        }

      }

    }

    & when not (@button-content-padding-horizontal = null) {

      /* -----------------------------------------------------------------------------
      Button Content
      ----------------------------------------------------------------------------- */

      & > * {

        box-sizing: content-box;
        padding-right: @button-content-padding-horizontal;

        &:last-child {

          padding-right: 0px;

        }

      }

    }

  }

  & when (@button-group-enabled) {

    /* -----------------------------------------------------------------------------
    Button Group (.button-group)
    ----------------------------------------------------------------------------- */

    .button-group {

      &.open {

        > button,
        > .button {

          .text-style-variant(button-selected);
          .shape-style-variant(button-selected);

          // Button Dropdown (.button-dropdown)

          &.button-dropdown,
          &.dropdown-toggle {

            &:after {

              .triangle-color("down", @button-selected-text-color);

            }

          }

          &.button-inverse {

            .text-style-variant(button-inverse-selected);
            .shape-style-variant(button-inverse-selected);

            // Button Dropdown (.button-dropdown)

            &.button-dropdown,
            &.dropdown-toggle {

              &:after {

                .triangle-color("down", @button-inverse-selected-text-color);

              }

            }

          }

        }

      }



      & when not (@button-rounded-padding-horizontal-scale = null) {

        /* -----------------------------------------------------------------------------
        Button
        ----------------------------------------------------------------------------- */

        button,
        .button {

          /* -----------------------------------------------------------------------------
          Button Rounded (.button-rounded)
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-right = null) {

              &:not(:first-of-type):not(:last-of-type) {

                padding-right: @button-padding-right;

              }

              &:first-of-type {

                padding-right: @button-padding-right;

                & when not (@button-narrow-padding-right-scale = null) {

                  &.button-narrow {

                    padding-right: @button-padding-right * @button-narrow-padding-right-scale;

                  }

                }

                & when not (@button-wide-padding-right-scale = null) {

                  &.button-wide {

                    padding-right: @button-padding-right * @button-wide-padding-right-scale;

                  }

                }

              }

            }

            & when not (@button-padding-left = null) {

              &:not(:first-of-type):not(:last-of-type) {

                padding-left: @button-padding-left;

              }

              &:last-of-type {

                padding-left: @button-padding-left;

                & when not (@button-narrow-padding-left-scale = null) {

                  &.button-narrow {

                    padding-left: @button-padding-left * @button-narrow-padding-left-scale;

                  }

                }

                & when not (@button-wide-padding-left-scale = null) {

                  &.button-wide {

                    padding-left: @button-padding-left * @button-wide-padding-left-scale;

                  }

                }

              }

            }

          }

        }

      }

    }

  }

}



& when (@layout-scale-screen-small-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Mini (@layout-screen-small-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-small-min-width) {

    & when (@button-enabled) and (@button-scale-screen-small-enabled) {

      /* -----------------------------------------------------------------------------
      Button
      ----------------------------------------------------------------------------- */

      button,
      .button {

        .text-size-variant(button, scale-screen-small);
        .shape-layout-variant(button, scale-screen-small);
        .shape-layout-variant(button, narrow, scale-screen-small);
        .shape-layout-variant(button, wide, scale-screen-small);

        & when not (@button-height-scale-screen-small = null) {

          height: @button-height * @button-height-scale-screen-small;

        }

        & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-small = null) {

          border-radius: @button-border-radius * @button-border-radius-scale-screen-small;

        }

        /* -----------------------------------------------------------------------------
        Button Dropdown (.button-dropdown)
        ----------------------------------------------------------------------------- */

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            & when not (@button-dropdown-caret-width = null) and not (@button-dropdown-caret-width-scale-screen-small = null) {

              .triangle-size-width("down", (@button-dropdown-caret-width * @button-dropdown-caret-width-scale-screen-small));

            }

            & when not (@button-dropdown-caret-height = null) and not (@button-dropdown-caret-height-scale-screen-small = null) {

              .triangle-size-height("down", (@button-dropdown-caret-height * @button-dropdown-caret-height-scale-screen-small));

            }

            & when not (@button-dropdown-caret-margin-left = null) and not (@button-dropdown-caret-margin-left-scale-screen-small = null) {

              margin-left: @button-dropdown-caret-margin-left * @button-dropdown-caret-margin-left-scale-screen-small;

            }

            & when not (@button-dropdown-caret-margin-top = null) and not (@button-dropdown-caret-margin-top-scale-screen-small = null) {

              margin-top: @button-dropdown-caret-margin-top * @button-dropdown-caret-margin-top-scale-screen-small;

            }

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button (.button-block)
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-small {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button Rounded (.button-rounded)
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-small = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-small;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-small;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-small;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-small = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-small;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-small;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-small;

                }

              }

            }

          }

        }

        & when not (@button-content-padding-horizontal = null) and not (@button-content-padding-horizontal-scale-screen-small = null) {

          /* -----------------------------------------------------------------------------
          Button Content
          ----------------------------------------------------------------------------- */

          & > * {

            padding-right: @button-content-padding-horizontal * @button-content-padding-horizontal-scale-screen-small;

          }

        }

      }

      & when (@button-group-enabled) {

        /* -----------------------------------------------------------------------------
        Button Group (.button-group)
        ----------------------------------------------------------------------------- */

        .button-group {

          & when not (@button-rounded-padding-horizontal-scale = null) {

            /* -----------------------------------------------------------------------------
            Button
            ----------------------------------------------------------------------------- */

            button,
            .button {

              /* -----------------------------------------------------------------------------
              Button Rounded (.button-rouded)
              ----------------------------------------------------------------------------- */

              &.button-rounded {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-small = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-small;

                  }

                  &:first-of-type {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-small;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-small;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-small;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-small = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-small;

                  }

                  &:last-of-type {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-small;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-small;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-small;

                      }

                    }

                  }

                }

              }

            }

          }

        }

      }

    }

  }

}



& when (@layout-scale-screen-medium-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Small (@layout-screen-medium-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-medium-min-width) {

    & when (@button-enabled) and (@button-scale-screen-medium-enabled) {

      /* -----------------------------------------------------------------------------
      Button
      ----------------------------------------------------------------------------- */

      button,
      .button {

        .text-size-variant(button, scale-screen-medium);
        .shape-layout-variant(button, scale-screen-medium);
        .shape-layout-variant(button, narrow, scale-screen-medium);
        .shape-layout-variant(button, wide, scale-screen-medium);

        & when not (@button-height-scale-screen-medium = null) {

          height: @button-height * @button-height-scale-screen-medium;

        }

        & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-medium = null) {

          border-radius: @button-border-radius * @button-border-radius-scale-screen-medium;

        }

        /* -----------------------------------------------------------------------------
        Button Dropdown (.button-dropdown)
        ----------------------------------------------------------------------------- */

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            & when not (@button-dropdown-caret-width = null) and not (@button-dropdown-caret-width-scale-screen-medium = null) {

              .triangle-size-width("down", (@button-dropdown-caret-width * @button-dropdown-caret-width-scale-screen-medium));

            }

            & when not (@button-dropdown-caret-height = null) and not (@button-dropdown-caret-height-scale-screen-medium = null) {

              .triangle-size-height("down", (@button-dropdown-caret-height * @button-dropdown-caret-height-scale-screen-medium));

            }

            & when not (@button-dropdown-caret-margin-left = null) and not (@button-dropdown-caret-margin-left-scale-screen-medium = null) {

              margin-left: @button-dropdown-caret-margin-left * @button-dropdown-caret-margin-left-scale-screen-medium;

            }

            & when not (@button-dropdown-caret-margin-top = null) and not (@button-dropdown-caret-margin-top-scale-screen-medium = null) {

              margin-top: @button-dropdown-caret-margin-top * @button-dropdown-caret-margin-top-scale-screen-medium;

            }

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button (.button-block)
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-medium {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button Rounded (.button-rounded)
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-medium = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-medium;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-medium;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-medium;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-medium = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-medium;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-medium;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-medium;

                }

              }

            }

          }

        }

        & when not (@button-content-padding-horizontal = null) and not (@button-content-padding-horizontal-scale-screen-medium = null) {

          /* -----------------------------------------------------------------------------
          Button Content
          ----------------------------------------------------------------------------- */

          & > * {

            padding-right: @button-content-padding-horizontal * @button-content-padding-horizontal-scale-screen-medium;

          }

        }

      }

      & when (@button-group-enabled) {

        /* -----------------------------------------------------------------------------
        Button Group (.button-group)
        ----------------------------------------------------------------------------- */

        .button-group {

          & when not (@button-rounded-padding-horizontal-scale = null) {

            /* -----------------------------------------------------------------------------
            Button
            ----------------------------------------------------------------------------- */

            button,
            .button {

              /* -----------------------------------------------------------------------------
              Button Rounded (.button-rouded)
              ----------------------------------------------------------------------------- */

              &.button-rounded {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-medium = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-medium;

                  }

                  &:first-of-type {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-medium;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-medium;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-medium;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-medium = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-medium;

                  }

                  &:last-of-type {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-medium;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-medium;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-medium;

                      }

                    }

                  }

                }

              }

            }

          }

        }

      }

    }

  }

}



& when (@layout-scale-screen-large-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Medium (@layout-screen-large-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-large-min-width) {

    & when (@button-enabled) and (@button-scale-screen-large-enabled) {

      /* -----------------------------------------------------------------------------
      Button
      ----------------------------------------------------------------------------- */

      button,
      .button {

        .text-size-variant(button, scale-screen-large);
        .shape-layout-variant(button, scale-screen-large);
        .shape-layout-variant(button, narrow, scale-screen-large);
        .shape-layout-variant(button, wide, scale-screen-large);

        & when not (@button-height-scale-screen-large = null) {

          height: @button-height * @button-height-scale-screen-large;

        }

        & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-large = null) {

          border-radius: @button-border-radius * @button-border-radius-scale-screen-large;

        }

        /* -----------------------------------------------------------------------------
        Button Dropdown (.button-dropdown)
        ----------------------------------------------------------------------------- */

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            & when not (@button-dropdown-caret-width = null) and not (@button-dropdown-caret-width-scale-screen-large = null) {

              .triangle-size-width("down", (@button-dropdown-caret-width * @button-dropdown-caret-width-scale-screen-large));

            }

            & when not (@button-dropdown-caret-height = null) and not (@button-dropdown-caret-height-scale-screen-large = null) {

              .triangle-size-height("down", (@button-dropdown-caret-height * @button-dropdown-caret-height-scale-screen-large));

            }

            & when not (@button-dropdown-caret-margin-left = null) and not (@button-dropdown-caret-margin-left-scale-screen-large = null) {

              margin-left: @button-dropdown-caret-margin-left * @button-dropdown-caret-margin-left-scale-screen-large;

            }

            & when not (@button-dropdown-caret-margin-top = null) and not (@button-dropdown-caret-margin-top-scale-screen-large = null) {

              margin-top: @button-dropdown-caret-margin-top * @button-dropdown-caret-margin-top-scale-screen-large;

            }

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button (.button-block)
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-large {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button Rounded (.button-rounded)
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-large = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-large;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-large;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-large;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-large = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-large;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-large;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-large;

                }

              }

            }

          }

        }

        & when not (@button-content-padding-horizontal = null) and not (@button-content-padding-horizontal-scale-screen-large = null) {

          /* -----------------------------------------------------------------------------
          Button Content
          ----------------------------------------------------------------------------- */

          & > * {

            padding-right: @button-content-padding-horizontal * @button-content-padding-horizontal-scale-screen-large;

          }

        }

      }

      & when (@button-group-enabled) {

        /* -----------------------------------------------------------------------------
        Button Group (.button-group)
        ----------------------------------------------------------------------------- */

        .button-group {

          & when not (@button-rounded-padding-horizontal-scale = null) {

            /* -----------------------------------------------------------------------------
            Button
            ----------------------------------------------------------------------------- */

            button,
            .button {

              /* -----------------------------------------------------------------------------
              Button Rounded (.button-rouded)
              ----------------------------------------------------------------------------- */

              &.button-rounded {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-large = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-large;

                  }

                  &:first-of-type {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-large;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-large;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-large;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-large = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-large;

                  }

                  &:last-of-type {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-large;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-large;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-large;

                      }

                    }

                  }

                }

              }

            }

          }

        }

      }

    }

  }

}



& when (@layout-scale-screen-jumbo-enabled) {

  /* -----------------------------------------------------------------------------
  Screen Size: Large (@layout-screen-jumbo-min-width) and wider
  ----------------------------------------------------------------------------- */

  @media (min-width: @layout-screen-jumbo-min-width) {

    & when (@button-enabled) and (@button-scale-screen-jumbo-enabled) {

      /* -----------------------------------------------------------------------------
      Button
      ----------------------------------------------------------------------------- */

      button,
      .button {

        .text-size-variant(button, scale-screen-jumbo);
        .shape-layout-variant(button, scale-screen-jumbo);
        .shape-layout-variant(button, narrow, scale-screen-jumbo);
        .shape-layout-variant(button, wide, scale-screen-jumbo);

        & when not (@button-height-scale-screen-jumbo = null) {

          height: @button-height * @button-height-scale-screen-jumbo;

        }

        & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-jumbo = null) {

          border-radius: @button-border-radius * @button-border-radius-scale-screen-jumbo;

        }

        /* -----------------------------------------------------------------------------
        Button Dropdown (.button-dropdown)
        ----------------------------------------------------------------------------- */

        &.button-dropdown,
        &.dropdown-toggle {

          &:after {

            & when not (@button-dropdown-caret-width = null) and not (@button-dropdown-caret-width-scale-screen-jumbo = null) {

              .triangle-size-width("down", (@button-dropdown-caret-width * @button-dropdown-caret-width-scale-screen-jumbo));

            }

            & when not (@button-dropdown-caret-height = null) and not (@button-dropdown-caret-height-scale-screen-jumbo = null) {

              .triangle-size-height("down", (@button-dropdown-caret-height * @button-dropdown-caret-height-scale-screen-jumbo));

            }

            & when not (@button-dropdown-caret-margin-left = null) and not (@button-dropdown-caret-margin-left-scale-screen-jumbo = null) {

              margin-left: @button-dropdown-caret-margin-left * @button-dropdown-caret-margin-left-scale-screen-jumbo;

            }

            & when not (@button-dropdown-caret-margin-top = null) and not (@button-dropdown-caret-margin-top-scale-screen-jumbo = null) {

              margin-top: @button-dropdown-caret-margin-top * @button-dropdown-caret-margin-top-scale-screen-jumbo;

            }

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button (.button-block)
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-jumbo {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button (.button-rounded)
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-jumbo = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-jumbo;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-jumbo;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-jumbo;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-jumbo = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-jumbo;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-jumbo;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-jumbo;

                }

              }

            }

          }

        }

        & when not (@button-content-padding-horizontal = null) and not (@button-content-padding-horizontal-scale-screen-jumbo = null) {

          /* -----------------------------------------------------------------------------
          Button Content
          ----------------------------------------------------------------------------- */

          & > * {

            padding-right: @button-content-padding-horizontal * @button-content-padding-horizontal-scale-screen-jumbo;

          }

        }

      }

      & when (@button-group-enabled) {

        /* -----------------------------------------------------------------------------
        Button Group (.button-group)
        ----------------------------------------------------------------------------- */

        .button-group {

          & when not (@button-rounded-padding-horizontal-scale = null) {

            /* -----------------------------------------------------------------------------
            Button
            ----------------------------------------------------------------------------- */

            button,
            .button {

              /* -----------------------------------------------------------------------------
              Button Rounded (.button-rouded)
              ----------------------------------------------------------------------------- */

              &.button-rounded {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-jumbo = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-jumbo;

                  }

                  &:first-of-type {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-jumbo;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-jumbo;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-jumbo;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-jumbo = null) {

                  &:not(:first-of-type):not(:last-of-type) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-jumbo;

                  }

                  &:last-of-type {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-jumbo;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-jumbo;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-jumbo;

                      }

                    }

                  }

                }

              }

            }

          }

        }

      }

    }

  }

}
