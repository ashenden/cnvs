/* -----------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

button/styles.less

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------- */






& when (@button-enabled) {

  /* -----------------------------------------------------------------------------
  --------------------------------------------------------------------------------
  button
  --------------------------------------------------------------------------------
  ----------------------------------------------------------------------------- */

  button,
  .button {

    display: inline-flex;
    justify-content: center;
    align-items: center;
    height: @button-height;
    transition: all 0.05s ease;
    .text-size-variant(button, null);
    .shape-layout-variant(button, null);
    .shape-layout-variant(button, narrow, null);
    .shape-layout-variant(button, wide, null);
    .text-style-variant(button);
    .shape-style-variant(button);

    & when not (@button-border-radius = null) {

      border-radius: @button-border-radius;

    }

    &:hover {

      .text-style-variant(button-hover);
      .shape-style-variant(button-hover);
      cursor: pointer;

    }

    &:active {

      .text-style-variant(button-active);
      .shape-style-variant(button-active);

    }

    &.selected {

      .text-style-variant(button-selected);
      .shape-style-variant(button-selected);

    }

    &:disabled,
    &.disabled {

      .text-style-variant(button-disabled);
      .shape-style-variant(button-disabled);

    }

    /* -----------------------------------------------------------------------------
    Block Button
    ----------------------------------------------------------------------------- */

    &.button-block {

      display: flex;
      width: 100%;
      margin-left: 0px;
      margin-right: 0px;

    }

    /* -----------------------------------------------------------------------------
    Rounded Button
    ----------------------------------------------------------------------------- */

    &.button-rounded {

      border-radius: 1000px;

      & when not (@button-rounded-padding-horizontal-scale = null) {

        & when not (@button-padding-left = null) {

          padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale;

          & when not (@button-narrow-padding-left-scale = null) {

            &.button-narrow {

              padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale;

            }

          }

          & when not (@button-wide-padding-left-scale = null) {

            &.button-wide {

              padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale;

            }

          }

        }

        & when not (@button-padding-right = null) {

          padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale;

          & when not (@button-narrow-padding-right-scale = null) {

            &.button-narrow {

              padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale;

            }

          }

          & when not (@button-wide-padding-right-scale = null) {

            &.button-wide {

              padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale;

            }

          }

        }

      }

    }




    & when (@screen-mini-enabled) {

      /* -----------------------------------------------------------------------------
      --------------------------------------------------------------------------------
      Screen Size: Mini (@screen-mini) and wider
      --------------------------------------------------------------------------------
      ----------------------------------------------------------------------------- */

      @media (min-width: @screen-mini) {

        & when (@button-scale-screen-mini-enabled) {

          .text-size-variant(button, scale-screen-mini);
          .shape-layout-variant(button, scale-screen-mini);
          .shape-layout-variant(button, narrow, scale-screen-mini);
          .shape-layout-variant(button, wide, scale-screen-mini);

          & when not (@button-height-scale-screen-mini = null) {

            height: @button-height * @button-height-scale-screen-mini;

          }

          & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-mini = null) {

            border-radius: @button-border-radius * @button-border-radius-scale-screen-mini;

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-mini {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button Rounded
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-mini = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-mini;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-mini;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-mini;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-mini = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-mini;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-mini;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-mini;

                }

              }

            }

          }

        }

      }

    }



    & when (@screen-small-enabled) {

      /* -----------------------------------------------------------------------------
      --------------------------------------------------------------------------------
      Screen Size: Small (@screen-small) and wider
      --------------------------------------------------------------------------------
      ----------------------------------------------------------------------------- */

      @media (min-width: @screen-small) {

        & when (@button-scale-screen-small-enabled) {

          .text-size-variant(button, scale-screen-small);
          .shape-layout-variant(button, scale-screen-small);
          .shape-layout-variant(button, narrow, scale-screen-small);
          .shape-layout-variant(button, wide, scale-screen-small);

          & when not (@button-height-scale-screen-small = null) {

            height: @button-height * @button-height-scale-screen-small;

          }

          & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-small = null) {

            border-radius: @button-border-radius * @button-border-radius-scale-screen-small;

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-small {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button Rounded
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-small = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-small;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-small;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-small;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-small = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-small;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-small;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-small;

                }

              }

            }

          }

        }

      }

    }



    & when (@screen-medium-enabled) {

      /* -----------------------------------------------------------------------------
      --------------------------------------------------------------------------------
      Screen Size: Medium (@screen-medium) and wider
      --------------------------------------------------------------------------------
      ----------------------------------------------------------------------------- */

      @media (min-width: @screen-medium) {

        & when (@button-scale-screen-medium-enabled) {

          .text-size-variant(button, scale-screen-medium);
          .shape-layout-variant(button, scale-screen-medium);
          .shape-layout-variant(button, narrow, scale-screen-medium);
          .shape-layout-variant(button, wide, scale-screen-medium);

          & when not (@button-height-scale-screen-medium = null) {

            height: @button-height * @button-height-scale-screen-medium;

          }

          & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-medium = null) {

            border-radius: @button-border-radius * @button-border-radius-scale-screen-medium;

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-medium {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          Button Rounded
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-medium = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-medium;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-medium;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-medium;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-medium = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-medium;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-medium;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-medium;

                }

              }

            }

          }

        }

      }

    }



    & when (@screen-large-enabled) {

      /* -----------------------------------------------------------------------------
      --------------------------------------------------------------------------------
      Screen Size: Large (@screen-large) and wider
      --------------------------------------------------------------------------------
      ----------------------------------------------------------------------------- */

      @media (min-width: @screen-large) {

        & when (@button-scale-screen-large-enabled) {

          .text-size-variant(button, scale-screen-large);
          .shape-layout-variant(button, scale-screen-large);
          .shape-layout-variant(button, narrow, scale-screen-large);
          .shape-layout-variant(button, wide, scale-screen-large);

          & when not (@button-height-scale-screen-large = null) {

            height: @button-height * @button-height-scale-screen-large;

          }

          & when not (@button-border-radius = null) and not (@button-border-radius-scale-screen-large = null) {

            border-radius: @button-border-radius * @button-border-radius-scale-screen-large;

          }

        }

        /* -----------------------------------------------------------------------------
        Block Button
        ----------------------------------------------------------------------------- */

        &.button-block {

          &.button-block-below-screen-large {

            width: auto;
            display: inline-flex;

          }

        }

        & when not (@button-rounded-padding-horizontal-scale = null) {

          /* -----------------------------------------------------------------------------
          .button-rounded
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-large = null) {

              padding-left: @button-padding-left * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-large;

              & when not (@button-narrow-padding-left-scale = null) {

                &.button-narrow {

                  padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-large;

                }

              }

              & when not (@button-wide-padding-left-scale = null) {

                &.button-wide {

                  padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-rounded-padding-horizontal-scale * @button-padding-left-scale-screen-large;

                }

              }

            }

            & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-large = null) {

              padding-right: @button-padding-right * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-large;

              & when not (@button-narrow-padding-right-scale = null) {

                &.button-narrow {

                  padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-large;

                }

              }

              & when not (@button-wide-padding-right-scale = null) {

                &.button-wide {

                  padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-rounded-padding-horizontal-scale * @button-padding-right-scale-screen-large;

                }

              }

            }

          }

        }

      }

    }

  }



  & when (@button-group-enabled) {

    .button-group {

      &.open {

        > button,
        > .button {

          .text-style-variant(button-selected);
          .shape-style-variant(button-selected);

        }

      }



      & when not (@button-rounded-padding-horizontal-scale = null) {

        /* -----------------------------------------------------------------------------
        --------------------------------------------------------------------------------
        button
        --------------------------------------------------------------------------------
        ----------------------------------------------------------------------------- */

        button,
        .button {

          /* -----------------------------------------------------------------------------
          Button Rounded
          ----------------------------------------------------------------------------- */

          &.button-rounded {

            & when not (@button-padding-right = null) {

              &:not(:first-child):not(:last-child) {

                padding-right: @button-padding-right;

              }

              &:first-child {

                padding-right: @button-padding-right;

                & when not (@button-narrow-padding-right-scale = null) {

                  &.button-narrow {

                    padding-right: @button-padding-right * @button-narrow-padding-right-scale;

                  }

                }

                & when not (@button-wide-padding-right-scale = null) {

                  &.button-wide {

                    padding-right: @button-padding-right * @button-wide-padding-right-scale;

                  }

                }

              }

            }

            & when not (@button-padding-left = null) {

              &:not(:first-child):not(:last-child) {

                padding-left: @button-padding-left;

              }

              &:last-child {

                padding-left: @button-padding-left;

                & when not (@button-narrow-padding-left-scale = null) {

                  &.button-narrow {

                    padding-left: @button-padding-left * @button-narrow-padding-left-scale;

                  }

                }

                & when not (@button-wide-padding-left-scale = null) {

                  &.button-wide {

                    padding-left: @button-padding-left * @button-wide-padding-left-scale;

                  }

                }

              }

            }



            & when (@screen-mini-enabled) {

              @media (min-width: @screen-mini) {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-mini = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-mini;

                  }

                  &:first-child {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-mini;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-mini;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-mini;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-mini = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-mini;

                  }

                  &:last-child {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-mini;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-mini;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-mini;

                      }

                    }

                  }

                }

              }

            }



            & when (@screen-small-enabled) {

              @media (min-width: @screen-small) {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-small = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-small;

                  }

                  &:first-child {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-small;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-small;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-small;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-small = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-small;

                  }

                  &:last-child {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-small;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-small;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-small;

                      }

                    }

                  }

                }

              }

            }



            & when (@screen-medium-enabled) {

              @media (min-width: @screen-medium) {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-medium = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-medium;

                  }

                  &:first-child {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-medium;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-medium;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-medium;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-medium = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-medium;

                  }

                  &:last-child {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-medium;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-medium;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-medium;

                      }

                    }

                  }

                }

              }

            }



            & when (@screen-large-enabled) {

              @media (min-width: @screen-large) {

                & when not (@button-padding-right = null) and not (@button-padding-right-scale-screen-large = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-large;

                  }

                  &:first-child {

                    padding-right: @button-padding-right * @button-padding-right-scale-screen-large;

                    & when not (@button-narrow-padding-right-scale = null) {

                      &.button-narrow {

                        padding-right: @button-padding-right * @button-narrow-padding-right-scale * @button-padding-right-scale-screen-large;

                      }

                    }

                    & when not (@button-wide-padding-right-scale = null) {

                      &.button-wide {

                        padding-right: @button-padding-right * @button-wide-padding-right-scale * @button-padding-right-scale-screen-large;

                      }

                    }

                  }

                }

                & when not (@button-padding-left = null) and not (@button-padding-left-scale-screen-large = null) {

                  &:not(:first-child):not(:last-child) {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-large;

                  }

                  &:last-child {

                    padding-left: @button-padding-left * @button-padding-left-scale-screen-large;

                    & when not (@button-narrow-padding-left-scale = null) {

                      &.button-narrow {

                        padding-left: @button-padding-left * @button-narrow-padding-left-scale * @button-padding-left-scale-screen-large;

                      }

                    }

                    & when not (@button-wide-padding-left-scale = null) {

                      &.button-wide {

                        padding-left: @button-padding-left * @button-wide-padding-left-scale * @button-padding-left-scale-screen-large;

                      }

                    }

                  }

                }

              }

            }

          }

        }

      }

    }

  }

}
